{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\closedloan\\\\src\\\\context\\\\data-context.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/React.createContext({\n  acceptData: (column, row, value) => {},\n  savedData: [],\n  colorHandler: () => {},\n  conditionalRowStyles: [],\n  sendRequestHandler: () => {},\n  searcheButtonHandler: (a, b) => {},\n  disableButtonChecker: () => {},\n  countButtonHandler: () => {},\n  cChangedData: [],\n  countSecView: false,\n  countSecViewHandler: () => {},\n  disableButton: false\n});\nexport default DataContext;\nexport const DataContextProvider = props => {\n  _s();\n  const [savedData, setSavedData] = useState([]); // {LoanId , Status,packN,boxN,...}  data for send\n  const [cChangedData, setCChangedData] = useState([]); // get count of changed Status which not equal ' '\n  const [countSecView, setCountSecView] = useState(false); // view button section view or hide\n  const [disableButton, setDisableButton] = useState(false);\n  const acceptHandlerF = (column, row, value) => {\n    const existinItem = savedData.find(item => {\n      return item.LoanId === row.LoanId;\n    });\n    if (!existinItem) {\n      setSavedData(prevState => [...prevState, Object.assign({\n        LoanId: row.LoanId,\n        [column]: column = value\n      })]);\n    } else {\n      existinItem.LoanId = row.LoanId;\n      existinItem[column] = value;\n    }\n    colorHandler(row, false);\n  };\n\n  //accept color\n\n  const colorHandler = (row, action) => {\n    const updatedData = savedData.map(item => {\n      if (row.LoanId !== item.LoanId) {\n        return item;\n      } else if (action) {\n        return {\n          ...item,\n          toggleSelected: !item.toggleSelected\n        };\n      } else {\n        return {\n          ...item,\n          toggleSelected: false\n        };\n      }\n    });\n    setSavedData(updatedData);\n  };\n  const disableButtonChecker = () => {\n    const counter = savedData.filter(el => el.toggleSelected === true);\n    counter.length > 1 || counter.length === 0 ? setDisableButton(true) : setDisableButton(false);\n  };\n\n  // changed status counter view\n  const countSecViewHandler = e => {\n    e.preventDefault();\n    setCountSecView(!countSecView);\n  };\n  const countChanged = async () => {\n    // const response = await fetch(`http://localhost:5000/count`);\n    const response = await fetch(`http://10.118.27.80:5000/count`);\n    const countData = await response.json();\n    setCChangedData(countData[0]);\n  };\n  // const response = await fetch(`http://localhost:5000/api?personalNo=${personalNo}&agreementNo=${agreementNo}`);\n\n  // const searcheNewdata= async (personalNo,agreementNo)=>{        \n  //   const response = await fetch(`http://10.118.27.80:5000/api?personalNo=${personalNo}&agreementNo=${agreementNo}`);\n  //   const newData=await response.json();\n  //   setSavedData(newData[0]) \n  // }\n\n  const searcheNewdata = async (personalNo, agreementNo) => {\n    try {\n      const response = await axios.get(`http://10.118.27.80:5000/api`, {\n        params: {\n          personalNo: personalNo,\n          agreementNo: agreementNo\n        }\n      });\n      const newData = response.data;\n      setSavedData(newData[0]);\n    } catch (error) {\n      // Handle error here\n      console.error('Error fetching data:', error);\n    }\n  };\n  // const newData=await fetch('http://localhost:5000/update',\n\n  //   const submitHandler=async()=>{\n  //     const newData=await fetch('http://10.118.27.80:5000/update',\n  //     {\n  //       method:'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         'Accept': 'application/json',\n  //         'Cache-Control': 'no-cache',\n  //     },\n  //       body:JSON.stringify(\n  //         {savedData}\n  //       )\n  //     }).then(res=>res.json())\n  //      console.log(newData);           \n  // }\n\n  const submitHandler = async () => {\n    const acceptObject = savedData.map(async loan => {\n      if (loan.toggleSelected === true) {\n        try {\n          const response = await axios.post('http://localhost:5000/update', acceptObject);\n          const newData = response.data;\n          console.log(newData);\n        } catch (error) {\n          // Handle error here\n          console.error('Error submitting data:', error);\n        }\n      }\n    });\n  };\n  const conditionalRowStyles = [{\n    when: row => row.toggleSelected,\n    style: {\n      backgroundColor: \"#e8fed5\",\n      userSelect: \"none\"\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      acceptData: acceptHandlerF,\n      savedData: savedData,\n      colorHandler: colorHandler,\n      conditionalRowStyles: conditionalRowStyles,\n      sendRequestHandler: submitHandler,\n      searcheButtonHandler: searcheNewdata,\n      disableButtonChecker: disableButtonChecker,\n      countButtonHandler: countChanged,\n      cChangedData: cChangedData,\n      countSecView: countSecView,\n      countSecViewHandler: countSecViewHandler,\n      disableButton: disableButton\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 12\n  }, this);\n};\n_s(DataContextProvider, \"SFCtU55/yLYC3e2vIqJaWuxsi8o=\");\n_c = DataContextProvider;\nvar _c;\n$RefreshReg$(_c, \"DataContextProvider\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DataContext","createContext","acceptData","column","row","value","savedData","colorHandler","conditionalRowStyles","sendRequestHandler","searcheButtonHandler","a","b","disableButtonChecker","countButtonHandler","cChangedData","countSecView","countSecViewHandler","disableButton","DataContextProvider","props","_s","setSavedData","setCChangedData","setCountSecView","setDisableButton","acceptHandlerF","existinItem","find","item","LoanId","prevState","Object","assign","action","updatedData","map","toggleSelected","counter","filter","el","length","e","preventDefault","countChanged","response","fetch","countData","json","searcheNewdata","personalNo","agreementNo","get","params","newData","data","error","console","submitHandler","acceptObject","loan","post","log","when","style","backgroundColor","userSelect","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/js/closedloan/src/context/data-context.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nconst DataContext =React.createContext ({\r\n  acceptData:(column,row,value)=>{},\r\n  savedData:[],\r\n  colorHandler:()=>{},\r\n  conditionalRowStyles:[],\r\n  sendRequestHandler:()=>{},\r\n  searcheButtonHandler:(a,b)=>{},\r\n  disableButtonChecker:()=>{},\r\n  countButtonHandler:()=>{},\r\n  cChangedData:[],\r\n  countSecView:false,\r\n  countSecViewHandler:()=>{},\r\n  disableButton:false\r\n})\r\n\r\nexport default DataContext\r\n\r\n\r\nexport const DataContextProvider=(props)=>{\r\n    const [savedData,setSavedData]=useState([])  // {LoanId , Status,packN,boxN,...}  data for send\r\n    const [cChangedData,setCChangedData]=useState([]) // get count of changed Status which not equal ' '\r\n    const [countSecView,setCountSecView]=useState(false)// view button section view or hide\r\n    const [disableButton,setDisableButton]=useState(false) \r\n   \r\n    \r\n  const acceptHandlerF =(column, row, value)=>{ \r\n    \r\n    const existinItem=savedData.find(item=>{return item.LoanId===row.LoanId})\r\n    if (!existinItem){\r\n      setSavedData((prevState)=>([...prevState,Object.assign({LoanId:row.LoanId, [column]:column=value})]));\r\n       } \r\n       else { \r\n                existinItem.LoanId=row.LoanId;\r\n                existinItem[column]=value\r\n            }\r\n    colorHandler(row,false)          \r\n    \r\n  }\r\n  \r\n//accept color\r\n\r\nconst colorHandler=(row,action)=>{    \r\n    const updatedData = savedData.map(item => {\r\n      if (row.LoanId !== item.LoanId) {\r\n        return item;\r\n      } else \r\n    \r\n      if(action) {\r\n        return {...item,\r\n          toggleSelected: !item.toggleSelected\r\n        }\r\n      }\r\n      else {\r\n        return {...item,\r\n        toggleSelected: false\r\n      }\r\n      }\r\n    });\r\n    setSavedData(updatedData)\r\n  }\r\n\r\n\r\n  const disableButtonChecker=()=>{\r\n    const counter=savedData.filter(el=>el.toggleSelected===true)\r\n    counter.length>1||counter.length===0?setDisableButton(true):setDisableButton(false)\r\n  }\r\n\r\n  // changed status counter view\r\n  const countSecViewHandler=(e)=>{\r\n    e.preventDefault()    \r\n    setCountSecView(!countSecView)\r\n  }\r\n\r\n  const countChanged=async ()=>{        \r\n    // const response = await fetch(`http://localhost:5000/count`);\r\n    const response = await fetch(`http://10.118.27.80:5000/count`);\r\n    const countData=await response.json();\r\n   setCChangedData(countData[0])\r\n  }\r\n  // const response = await fetch(`http://localhost:5000/api?personalNo=${personalNo}&agreementNo=${agreementNo}`);\r\n  \r\n  // const searcheNewdata= async (personalNo,agreementNo)=>{        \r\n  //   const response = await fetch(`http://10.118.27.80:5000/api?personalNo=${personalNo}&agreementNo=${agreementNo}`);\r\n  //   const newData=await response.json();\r\n  //   setSavedData(newData[0]) \r\n  // }\r\n\r\n  const searcheNewdata = async (personalNo, agreementNo) => {\r\n    try {\r\n      const response = await axios.get(`http://10.118.27.80:5000/api`, {\r\n        params: {\r\n          personalNo: personalNo,\r\n          agreementNo: agreementNo,\r\n        },\r\n      });\r\n  \r\n      const newData = response.data;\r\n      setSavedData(newData[0]);\r\n    } catch (error) {\r\n      // Handle error here\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n  // const newData=await fetch('http://localhost:5000/update',\r\n\r\n//   const submitHandler=async()=>{\r\n//     const newData=await fetch('http://10.118.27.80:5000/update',\r\n//     {\r\n//       method:'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         'Accept': 'application/json',\r\n//         'Cache-Control': 'no-cache',\r\n//     },\r\n//       body:JSON.stringify(\r\n//         {savedData}\r\n//       )\r\n//     }).then(res=>res.json())\r\n//      console.log(newData);           \r\n// }\r\n\r\nconst submitHandler = async () => {\r\n    const acceptObject =savedData.map(async loan=>{\r\n      if(loan.toggleSelected===true){\r\n        try {\r\n\r\n     \r\n    const response = await axios.post('http://localhost:5000/update', acceptObject);\r\n\r\n    const newData = response.data;\r\n    console.log(newData);\r\n \r\n  } catch (error) {\r\n    // Handle error here\r\n    console.error('Error submitting data:', error);\r\n  } } })\r\n};\r\n\r\n\r\n  const conditionalRowStyles = [\r\n    {\r\n      when: row => row.toggleSelected,\r\n      style: {\r\n        backgroundColor: \"#e8fed5\",\r\n        userSelect: \"none\"\r\n      }\r\n    }];\r\n\r\n    return <DataContext.Provider value={{\r\n        acceptData:acceptHandlerF,\r\n        savedData:savedData,\r\n        colorHandler:colorHandler,\r\n        conditionalRowStyles:conditionalRowStyles,\r\n        sendRequestHandler:submitHandler,\r\n        searcheButtonHandler:searcheNewdata,\r\n        disableButtonChecker:disableButtonChecker,\r\n        countButtonHandler:countChanged,\r\n        cChangedData:cChangedData,\r\n        countSecView:countSecView,\r\n        countSecViewHandler:countSecViewHandler,\r\n        disableButton:disableButton\r\n        \r\n    }} >\r\n        {props.children}\r\n    </DataContext.Provider>    \r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}